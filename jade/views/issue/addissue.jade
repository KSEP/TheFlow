doctype html
html(xmlns:th='http://www.thymeleaf.org', xmlns:tiles='http://www.thymeleaf.org')
    head
        include ../../jade-mixins/mixins.jade
        +head-text('New issue')
    body
        object(th:include='fragments/layout :: styles', th:remove='tag')
        #wrap
            div(th:include='fragments/layout :: header', th:remove='tag') &nbsp;
            .container.main-content
                .row
                    .col-md-3.nav-col.text-left
                        a.fancy-button.medium.blueRiver.icon.basic(th:href!='@{/issue/all}')
                            span.icon.pull-left
                                i.fa.fa-chevron-left
                            | &nbsp;Back
                    .col-md-6
                        h1.main-title.text-center(th:text!='\#{issue.create.title}') Create issue
                    .col-md-3.text-right
                        a.fancy-button.medium.blueRiver.icon.basic(th:href='@{/issue/all}')
                            span.icon.pull-left
                                i.fa.fa-list
                            | &nbsp;All issues
                .row
                    .col-md-8.col-md-offset-2
                        form#createIssueForm.form-horizontal.issue-full-form(th:if!= '${\#arrays.length(projects)}', data-toggle='validator', th:object!='${issue}', th:action!='@{save}', method='post')
                            .form-group
                                label.col-sm-2.control-label(for='title', th:text!='\#{label.issue.title}') Title
                                .col-sm-10
                                    input#title.form-control(type='text', placeholder='Title', th:field='*{title}', required='', maxlength='50')
                                    .help-block.with-errors
                                    .with-errors(th:if!="${#fields.hasErrors('title')}", th:errors='*{title}')
                            .form-group
                                label.col-sm-2.control-label(for='description', th:text!='\#{label.issue.description}') Description
                                .col-sm-10
                                    textarea#description.form-control(th:field!='*{description}', maxlength='1000')
                                    .help-block.with-errors
                                    .with-errors(th:if!="${#fields.hasErrors('description')}", th:errors='*{description}')
                            .form-group
                                label.col-sm-2.control-label(for='type', th:text!='\#{label.issue.type}') Type
                                .col-sm-10
                                    select#type.selectpicker(th:field='*{type}', required='')
                                        option(th:each!='type : ${types}', th:value!='${type}', th:text!='${type}')
                                    .help-block.with-errors
                                    .with-errors(th:if!="${#fields.hasErrors('type')}", th:errors='*{type}')
                            .form-group
                                label.col-sm-2.control-label(for='priority', th:text!='\#{label.issue.priority}') Priority
                                .col-sm-10
                                    select#priority.selectpicker(th:field='*{priority}')
                                        option(value='') Choose priority
                                        option(th:each!='priority : ${priorities}', th:value!='${priority}', th:text!='${priority}')
                                    .help-block.with-errors
                                    .with-errors(th:if!="${#fields.hasErrors('priority')}", th:errors!='*{priority}')
                            .form-group
                                label.col-sm-2.control-label(for='assignee_id', th:text!='\#{label.issue.assignee}') Assignee
                                .col-sm-10
                                    select#assignee_id.selectpicker(th:field='*{assigneeId}')
                                        option(value='') Choose customer
                                        option(th:each='assignee : ${assignees}', th:value!='${assignee.userId}', th:text!='${assignee.fullName}')
                                    .help-block.with-errors
                                    .with-errors(th:if="${#fields.hasErrors('assigneeId')}", th:errors='*{assigneeId}')
                            .form-group
                                label.col-sm-2.control-label(for='project_id', th:text!='\#{label.issue.project}') Project
                                .col-sm-10
                                    select#project_id.selectpicker(th:field='*{projectId}', required='', minlength='1')
                                        option(th:each='project : ${projects}', th:value!='${project.projectId}', th:text!='${project.projName}')
                                    .help-block.with-errors
                                    .with-errors(th:if="${#fields.hasErrors('projectId')}", th:errors='*{projectId}')
                            .form-group
                                label.col-sm-2.control-label(for='estimated_time', th:text!='\#{label.issue.esttime}') Estimated time:
                                .col-sm-10
                                    .date
                                        input#estimated_time.form-control.logtimerange(type='text', th:field!='*{estimatedTime}', value='00:00')
                                    .help-block.with-errors
                                    .with-errors(th:if!="${#fields.hasErrors('estimatedTime')}", th:errors!='*{estimatedTime}')
                            .form-group
                                .col-sm-10.col-sm-offset-2
                                    button.fancy-button.medium.blueRiver.basic.nomargin(type='submit')
                                        | Create
                                        span.icon
                                            i.fa.fa-check-circle
                        .alert.alert-dismissable.alert-info(th:if!='!${\#arrays.length(projects)}')
                            button.close(type='button', data-dismiss='alert', aria-hidden='true') &times;
                            span
                                a(sec:authorize="hasAnyRole('Admin', 'Observer')", th:href='@{/project/add}') Add your first project
                                | , before adding issues.
            #push
        div(th:include!="fragments/layout :: ${#authentication.principal.isAdmin()} ? 'footer-admin' : 'footer'", th:remove='tag') &nbsp;
        object(th:include='fragments/layout :: script', th:remove='tag')
